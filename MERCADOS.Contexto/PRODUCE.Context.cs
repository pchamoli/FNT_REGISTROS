//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MERCADOS.Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_REGISTROSEntities : DbContext
    {
        public DB_REGISTROSEntities()
            : base("name=DB_REGISTROSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
        }

        public virtual DbSet<DAT_CAMPO> DAT_CAMPO { get; set; }
        public virtual DbSet<DAT_ESPECIE> DAT_ESPECIE { get; set; }
        public virtual DbSet<DAT_ESTADO> DAT_ESTADO { get; set; }
        public virtual DbSet<DAT_FORMATO> DAT_FORMATO { get; set; }
        public virtual DbSet<DAT_INST_FMT_MAYORISTA> DAT_INST_FMT_MAYORISTA { get; set; }
        public virtual DbSet<DAT_INST_FMT_MINORISTA> DAT_INST_FMT_MINORISTA { get; set; }
        public virtual DbSet<DAT_INST_FORMATO> DAT_INST_FORMATO { get; set; }
        public virtual DbSet<DAT_LUGAR> DAT_LUGAR { get; set; }
        public virtual DbSet<DAT_MERCADO> DAT_MERCADO { get; set; }
        public virtual DbSet<DAT_PRESENTACION> DAT_PRESENTACION { get; set; }
        public virtual DbSet<DAT_SECCION> DAT_SECCION { get; set; }
        public virtual DbSet<DAT_UNIDAD> DAT_UNIDAD { get; set; }
        public virtual DbSet<VW_MAESTRO_CAMPO> VW_MAESTRO_CAMPO { get; set; }
        public virtual DbSet<VW_MAESTRO_FORMATO> VW_MAESTRO_FORMATO { get; set; }
        public virtual DbSet<VW_MAESTRO_SECCION> VW_MAESTRO_SECCION { get; set; }
    
        public virtual int p_DAT_CAMPO_Procesar(Nullable<int> tipo_operacion, Nullable<int> id_campo, Nullable<int> id_seccion, string nom_campo, string desc_campo, string estado_campo, string oblig_campo, string usuario, ObjectParameter cod_error, ObjectParameter msg_error)
        {
            var tipo_operacionParameter = tipo_operacion.HasValue ?
                new ObjectParameter("tipo_operacion", tipo_operacion) :
                new ObjectParameter("tipo_operacion", typeof(int));
    
            var id_campoParameter = id_campo.HasValue ?
                new ObjectParameter("id_campo", id_campo) :
                new ObjectParameter("id_campo", typeof(int));
    
            var id_seccionParameter = id_seccion.HasValue ?
                new ObjectParameter("id_seccion", id_seccion) :
                new ObjectParameter("id_seccion", typeof(int));
    
            var nom_campoParameter = nom_campo != null ?
                new ObjectParameter("nom_campo", nom_campo) :
                new ObjectParameter("nom_campo", typeof(string));
    
            var desc_campoParameter = desc_campo != null ?
                new ObjectParameter("desc_campo", desc_campo) :
                new ObjectParameter("desc_campo", typeof(string));
    
            var estado_campoParameter = estado_campo != null ?
                new ObjectParameter("estado_campo", estado_campo) :
                new ObjectParameter("estado_campo", typeof(string));
    
            var oblig_campoParameter = oblig_campo != null ?
                new ObjectParameter("oblig_campo", oblig_campo) :
                new ObjectParameter("oblig_campo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_DAT_CAMPO_Procesar", tipo_operacionParameter, id_campoParameter, id_seccionParameter, nom_campoParameter, desc_campoParameter, estado_campoParameter, oblig_campoParameter, usuarioParameter, cod_error, msg_error);
        }
    
        public virtual int p_DAT_FORMATO_Eliminar(Nullable<int> id_formato, ObjectParameter cod_error, ObjectParameter msg_error)
        {
            var id_formatoParameter = id_formato.HasValue ?
                new ObjectParameter("id_formato", id_formato) :
                new ObjectParameter("id_formato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_DAT_FORMATO_Eliminar", id_formatoParameter, cod_error, msg_error);
        }
    
        public virtual int p_DAT_FORMATO_Procesar(Nullable<int> tipo_operacion, Nullable<int> id_formato, Nullable<int> tipo_formato, string nom_formato, string estado, string usuario, ObjectParameter cod_error, ObjectParameter msg_error)
        {
            var tipo_operacionParameter = tipo_operacion.HasValue ?
                new ObjectParameter("tipo_operacion", tipo_operacion) :
                new ObjectParameter("tipo_operacion", typeof(int));
    
            var id_formatoParameter = id_formato.HasValue ?
                new ObjectParameter("id_formato", id_formato) :
                new ObjectParameter("id_formato", typeof(int));
    
            var tipo_formatoParameter = tipo_formato.HasValue ?
                new ObjectParameter("tipo_formato", tipo_formato) :
                new ObjectParameter("tipo_formato", typeof(int));
    
            var nom_formatoParameter = nom_formato != null ?
                new ObjectParameter("nom_formato", nom_formato) :
                new ObjectParameter("nom_formato", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_DAT_FORMATO_Procesar", tipo_operacionParameter, id_formatoParameter, tipo_formatoParameter, nom_formatoParameter, estadoParameter, usuarioParameter, cod_error, msg_error);
        }
    
        public virtual int p_DAT_SECCION_Procesar(Nullable<int> tipo_operacion, Nullable<int> id_seccion, Nullable<int> id_formato, string nom_seccion, Nullable<int> orden_seccion, string estado_seccion, string usuario, ObjectParameter cod_error, ObjectParameter msg_error)
        {
            var tipo_operacionParameter = tipo_operacion.HasValue ?
                new ObjectParameter("tipo_operacion", tipo_operacion) :
                new ObjectParameter("tipo_operacion", typeof(int));
    
            var id_seccionParameter = id_seccion.HasValue ?
                new ObjectParameter("id_seccion", id_seccion) :
                new ObjectParameter("id_seccion", typeof(int));
    
            var id_formatoParameter = id_formato.HasValue ?
                new ObjectParameter("id_formato", id_formato) :
                new ObjectParameter("id_formato", typeof(int));
    
            var nom_seccionParameter = nom_seccion != null ?
                new ObjectParameter("nom_seccion", nom_seccion) :
                new ObjectParameter("nom_seccion", typeof(string));
    
            var orden_seccionParameter = orden_seccion.HasValue ?
                new ObjectParameter("orden_seccion", orden_seccion) :
                new ObjectParameter("orden_seccion", typeof(int));
    
            var estado_seccionParameter = estado_seccion != null ?
                new ObjectParameter("estado_seccion", estado_seccion) :
                new ObjectParameter("estado_seccion", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_DAT_SECCION_Procesar", tipo_operacionParameter, id_seccionParameter, id_formatoParameter, nom_seccionParameter, orden_seccionParameter, estado_seccionParameter, usuarioParameter, cod_error, msg_error);
        }
    }
}
