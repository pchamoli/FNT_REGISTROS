@model MERCADOS.Web.Models.CampoModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#id_formato").change(function () {
            var formatoId = $(this).val();
            $.getJSON("/Campo/CargarSecciones", { id_formato: formatoId },
                   function (data) {
                       var select = $("#id_seccion");
                       select.empty();
                       select.append($('<option/>', {
                           value: "0",
                           text: "Seleccione una sección"
                       }));
                       $.each(data, function (index, itemData) {
                           select.append($('<option/>', {
                               value: itemData.id_seccion,
                               text: itemData.nom_seccion
                           }));
                       });
                   });
        });
    });

</script>

<h2>Modificar campo</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Permite la modificación de un campo creado</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_campo)

        <div class="form-group" style="text-align: left;">
            @Html.Label("lblFormato", "Formato", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_formato", (SelectList)ViewBag.FormatoList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("id_formato", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="text-align: left;">
            @Html.LabelFor(model => model.id_seccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_seccion, (SelectList)ViewBag.SeccionList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id_seccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="text-align: left;">
            @Html.LabelFor(model => model.nom_campo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom_campo, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                @Html.ValidationMessageFor(model => model.nom_campo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="text-align: left;">
            @Html.LabelFor(model => model.desc_campo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.desc_campo, new { htmlAttributes = new { @class = "form-control", @cols = 80, @rows = 8, @style = "text-transform:uppercase" } })
                @Html.ValidationMessageFor(model => model.desc_campo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="text-align: left;">
            @Html.LabelFor(model => model.EsActivo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EsActivo)
                @Html.ValidationMessageFor(model => model.EsActivo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="text-align: left;">
            @Html.LabelFor(model => model.EsObligatorio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EsObligatorio)
                @Html.ValidationMessageFor(model => model.EsObligatorio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Grabar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>
